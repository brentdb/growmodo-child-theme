// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
) !default;


// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px
) !default;

// Tables
//
// Customizes the `.table` component with basic values, each used across all table variations.

$table-cell-padding:          .8rem !default;
$table-cell-padding-sm:       .3rem !default;

@mixin drop-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $alpha: 0.1) {
  -webkit-box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
  -moz-box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
  box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
}

@mixin border-radius($arguments) {
  -webkit-border-radius: $arguments;
  -moz-border-radius: $arguments;
  border-radius: $arguments;
}

@mixin opacity($opacity: 0.5) {
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  -webkit-opacity: $opacity;
  opacity: $opacity;
  $opperc: $opacity * 100;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(opacity=${opperc})";
  filter: "alpha(opacity=${opperc})";
}

@mixin transition-duration($duration: 0.2s) {
  -moz-transition-duration: $duration;
  -webkit-transition-duration: $duration;
  -o-transition-duration: $duration;
  transition-duration: $duration;
}

@mixin transform($arguments) {
  -webkit-transform: $arguments;
  -moz-transform: $arguments;
  -o-transform: $arguments;
  -ms-transform: $arguments;
  transform: $arguments;
}

@mixin transition ($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
}

@mixin inner-shadow($horizontal: 0, $vertical: 1px, $blur: 2px, $alpha: 0.4) {
  -webkit-box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
  -moz-box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
  box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
}

@mixin box-shadow($arguments) {
  -webkit-box-shadow: $arguments;
  -moz-box-shadow: $arguments;
  box-shadow: $arguments;
}

@mixin text-shadow($arguments) {
  -webkit-text-shadow: $arguments;
  -moz-text-shadow: $arguments;
  text-shadow: $arguments;
}

@mixin box-sizing($sizing: border-box) {
  -ms-box-sizing: $sizing;
  -moz-box-sizing: $sizing;
  -webkit-box-sizing: $sizing;
  box-sizing: $sizing;
}

@mixin appearance($arguments) {
  -webkit-appearance: $arguments;
  -moz-appearance: $arguments;
  appearance: $arguments;
}


// RESPONSIVE MEDIA QUERIES
// Small tablets and large smartphones (landscape view)
$screen-xs-min: 320px;

$screen-xs-max: 767px;

$screen-sm-min: 767px;

// Small tablets (portrait view)
$screen-md-min: 768px;

// Tablets and small desktops
$screen-lg-min: 992px;

$screen-lg-max: 1024px;

// Large tablets and desktops
$screen-xl-min: 1200px;

// Small devices
@mixin xs {
  @media (min-width: #{$screen-xs-min}) {
      @content;
  }
}

@mixin xs-max {
  @media (max-width: #{$screen-xs-max}) {
      @content;
  }
}

// Small devices
@mixin sm {
  @media (max-width: #{$screen-sm-min}) {
      @content;
  }
}

// Small devices
@mixin sm-max {
  @media (max-width: #{$screen-sm-min}) {
      @content;
  }
}

// Medium devices
@mixin md {
  @media (min-width: #{$screen-md-min}) {
      @content;
  }
}

@mixin md-max {
  @media (max-width: #{$screen-lg-min}) {
      @content;
  }
}

// Large devices
@mixin lg {
  @media (min-width: #{$screen-lg-min}) {
      @content;
  }
}

@mixin lg-max {
  @media (max-width: #{$screen-lg-max}) {
      @content;
  }
}

// Extra large devices
@mixin xl {
  @media (min-width: #{$screen-xl-min}) {
      @content;
  }
}